# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
    jwt.secret_key: '%env(JWT_SECRET)%' # Тот же ключ, что и в сервисе-отправителе

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'

    _instanceof:
        App\Shared\Application\Command\CommandHandlerInterface:
            tags:
                - { name: messenger.message_handler, bus: command.bus }

        App\Shared\Application\Query\QueryHandlerInterface:
            tags:
                - { name: messenger.message_handler, bus: query.bus }

        App\Shared\Application\Event\EventHandlerInterface:
            tags:
                - { name: messenger.message_handler, bus: event.bus }
        App\Shared\Application\Message\MessageHandlerInterface:
            tags:
                - { name: messenger.message_handler,  bus: message.bus }

    # Telegram logger
    App\Shared\Infrastructure\EventListener\Request\SessionRequestProcessor:
        tags:
            - { name: monolog.processor, channel: 'notifier' }
    telegram_handler:
        class: App\Shared\Infrastructure\Log\TelegramLogHandler
        arguments:
            - '%env(LOG_TELEGRAM_TOKEN)%'
            - '%env(LOG_TELEGRAM_CHANNEL)%'
    # Telegram logger

    # Telegram Notification
    App\Notification\Application\Channel\Telegram\Service\TelegramBotService:
        arguments:
            $webhookUrl: '%env(TELEGRAM_NOTIFICATION_BOT_WEBHOOK)%'
            $commandPath: /app/src/Notification/Application/Channel/Telegram/Command
            $secret: '%env(TELEGRAM_NOTIFICATION_BOT_SECRET)%'

    App\Notification\Domain\Service\TelegramChannelVerifier:
        arguments:
            $botName: '%env(TELEGRAM_NOTIFICATION_BOT_USERNAME)%'
        tags: [ 'channel.verification.strategy' ]

    App\Notification\Application\UseCase\Command\InitiateChannelVerification\InitiateChannelVerificationCommandHandler:
        arguments:
            $strategies: !tagged_iterator channel.verification.strategy

    Longman\TelegramBot\Telegram:
        arguments:
            - '%env(TELEGRAM_NOTIFICATION_BOT_TOKEN)%'  # API ключ
            - '%env(TELEGRAM_NOTIFICATION_BOT_USERNAME)%'  # Имя бота
    # Telegram Notification

    Random\Randomizer: ~

    App\Shared\Domain\Service\TokenService:
        arguments:
            $randomizer: '@Random\Randomizer'

    App\Shared\Infrastructure\Validation\Validator:
        arguments:
            $validatorBuilder: '@validator.builder'

    App\Shared\Domain\Service\JwtValidatorService:
        arguments:
            $secretKey: '%jwt.secret_key%'

    App\Shared\Domain\Repository\UnitOfWorkInterface:
        alias: App\Shared\Infrastructure\Persistence\Doctrine\UnitOfWork


    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
